apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}
task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is ->
        p.load(is)
    }
    p.each { name, value ->
        ext[name] = value
    }
} else {
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}

publishing {
    publications {
        release(MavenPublication) {
            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version PUBLISH_VERSION

            if (project.plugins.findPlugin("com.android.library")) {
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            } else {
                artifact("$buildDir/libs/${project.getName()}-${version}.jar")
            }
            artifact androidSourcesJar
            artifact androidJavadocsJar
            pom {
                packaging 'aar'
                name = PUBLISH_ARTIFACT_ID
                description = 'EasyFTC library for FTC autonomous'
                url = 'https://github.com/lcrobotics/EasyFTC'
                licenses {
                    license {
                        name = 'GPL-3.0'
                        url = 'https://github.com/lcrobotics/EasyFTC/blob/release/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'lcrobotics'
                        name = 'Hax Robotics'
                        email = 'haxprogramming@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/lcrobotics/EasyFTC.git'
                    developerConnection = 'scm:git:ssh://github.com/lcrobotics/EasyFTC.git'
                    url = 'https://github.com/lcrobotics/EasyFTC'
                }

                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "mavencentral"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

nexusStaging {
    packageGroup = PUBLISH_GROUP_ID
    stagingProfileId = sonatypeStagingProfileId
    username = ossrhUsername
    password = ossrhPassword
}
signing {
    sign publishing.publications
}